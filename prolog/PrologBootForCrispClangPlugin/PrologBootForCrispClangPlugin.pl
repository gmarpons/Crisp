init_msg :-
        write('Initializing Prolog engine.'), nl.

welcome_msg_and_prolog :-
        write('Welcome to the Crisp interactive interface!'), nl,
        write('Enter Ctrl-D to exit.'), nl,
        % set_prolog_flag(verbose, normal),
        prolog.

clangFactsFileName(PlName) :-
        translationUnitMainFileName(AbsPathName),
        file_base_name(AbsPathName, CppName),
        file_name_extension(Base, _, CppName),
        file_name_extension(Base, pl, PlName).

%% FIXME: the following code doesn't belongs here

violationCandidate('HICPP 3.4.2', [MethodRepr]) :-
        isA(Method, 'CXXMethodDecl'),
        getType(Method, MethodType),
        getCanonicalType(MethodType, CanonicalMethodType),
        isConstFunctionProtoType(CanonicalMethodType),
        getResultType(CanonicalMethodType, ResultType),
        getCanonicalType(ResultType, CanonicalResultType),
        isA(CanonicalResultType, 'PointerType'),
        getPointeeType(CanonicalResultType, PointeeType),
        getCanonicalType(PointeeType, CanonicalPointeeType),
        \+ isConstQualified(CanonicalPointeeType),

                                % This part should be generated by
                                % CRISP compiler
        mangleName(Method, MethodRepr).

writeAllViolationCandidates :-
        clangFactsFileName(FileName),
        open(FileName, write, Stream),
        ( writeAllViolationCandidatesAux(Stream)
        ; close(Stream)
        ).

writeAllViolationCandidatesAux(Stream) :-
        violationCandidate(Rule, Culprits),
        writeAllViolationCandidatesAux2(Stream, Rule, Culprits).

writeAllViolationCandidatesAux2(Stream, Rule, Culprits) :-
        writeq(Stream, violationCandidate(Rule, Culprits)),
        write(Stream, '.'),
        nl(Stream),
        fail.

readAllViolationCandidates :-
        llvmFactsFileName(FileName),
        consult(FileName).
