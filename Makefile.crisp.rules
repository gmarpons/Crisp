## Makefile.crisp.rules - Common make rules for Crisp -----------*- Makefile -*-

# TODO: Check that dependence on this Makefile is correctly handled by
# build system.

###############################################################################
# VARIABLES: Set up various variables based on configuration data
###############################################################################

#--------------------------------------------------------------------
# Directory locations
#--------------------------------------------------------------------

DataDir     := $(PROJ_OBJ_ROOT)/$(BuildMode)/share


#--------------------------------------------------------------------
# Augment flag variables
#--------------------------------------------------------------------

ifeq ($(ENABLE_DATA_OBJ_ROOT),1)
  CPP.DataDirDefines := -DDATA_OBJ_ROOT='$(DataDir)'
else
  CPP.DataDirDefines := -DDATA_INSTALL_ROOT='$(PROJ_datadir)/$(PROJECT_NAME)'
endif

CPPFLAGS += $(CPP.DataDirDefines)


###############################################################################
# DIRECTORIES: Handle recursive descent of directory structure
###############################################################################

.PRECIOUS: $(DataDir)/.dir


###############################################################################
# Prolog Saved State Build Rules
###############################################################################

ifdef PROLOGSAVEDSTATENAME

#----------------------------------------------------------
# Override Sources-related vars.
#----------------------------------------------------------

ifndef SOURCES
  Sources := $(notdir $(wildcard $(PROJ_SRC_DIR)/*.pl))
else
  Sources := $(SOURCES)
endif

ifdef BUILT_SOURCES
  Sources += $(filter %.pl,$(BUILT_SOURCES))
endif

FullPathSources := $(addprefix $(PROJ_SRC_DIR)/, $(Sources))


#---------------------------------------------------------
# Set up variables for building a Prolog Saved State.
#---------------------------------------------------------

PROLOGSAVEDSTATEEXT=.sh
PROLOGSAVEDSTATEEXENAME := $(strip $(PROLOGSAVEDSTATENAME))$(PROLOGSAVEDSTATEEXT)

# Prolog Saved State code is put in DataDir (./share) because it is
# architecture-independent

PrologSavedStateBuildPath := $(DataDir)/$(PROLOGSAVEDSTATEEXENAME)

#---------------------------------------------------------
# Provide targets for building Prolog Saved States.
#---------------------------------------------------------

all-local:: $(PrologSavedStateBuildPath)

clean-local::
ifneq ($(strip $(PrologSavedStateBuildPath)),)
	-$(Verb) $(RM) -f $(PrologSavedStateBuildPath)
endif

# TODO: target install, with all the stuff needed for installation and
# distribution. llvm/Makefile.rules Vars that need possibly to be
# modified: DistAlways, ...

# TODO: set suitable Prolog compiler options when optimization is
# enabled.

$(PrologSavedStateBuildPath): $(DataDir)/.dir

$(PrologSavedStateBuildPath): $(FullPathSources)
	$(Echo) Linking $(BuildMode) Prolog saved state $(PROLOGSAVEDSTATENAME)
	$(Verb) $(SWIPL) -o $@ -c $(FullPathSources)
	$(Echo) ======= Finished Linking $(BuildMode) Prolog saved state \
		$(PROLOGSAVEDSTATENAME)

# endif PROLOGSAVEDSTATENAME
endif


###############################################################################
# TOP LEVEL - targets only to apply at the top level directory
###############################################################################

#------------------------------------------------------------------------
# Print out the directories used for building
#------------------------------------------------------------------------

printvars::
	$(Echo) "DataDir      : " '$(DataDir)'
